{"version":3,"sources":["store/reducers.js","store/index.js","store/action-types.js","utils/commons.js","components/search/Search.js","components/recommend/Recommend.js","components/app_list/AppList.js","plugins/axios.js","api/index.js","pages/Home.js","components/search_list/SearchList.js","pages/search_result/SearchResult.js","store/action.js","pages/profile/Profile.js","router/index.js","serviceWorker.js","index.js"],"names":["defaultState","searchList","store","createStore","state","arguments","length","undefined","action","type","Object","objectSpread","applyMiddleware","thunk","needLoadingRequestCount","showFullScreenLoading","toast_default","a","loading","hideFullScreenLoading","hide","Search","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","appSearch","fn","delay","timer","args","that","clearTimeout","setTimeout","apply","debounce","keyword","refs","value","showCancelBtn","setState","onFoucs","onCancel","focus","react_default","createElement","className","ref","onChange","bind","onFocus","placeholder","onClick","Component","Recommend","list","map","item","index","key","src","label","alt","category","attributes","AppList","LazyLoad_default","offsetVertical","_axios","axios","create","baseURL","timeout","headers","Content-Type","interceptors","request","use","config","error","Promise","reject","response","data","fail","api","appListData","params","get","recommendData","lookUp","Index","handleAction","STATS","refreshing","handRefreshing","handLoadMore","getAppList","hasMore","page","getPageData","appList","appListAll","recommendList","init","pageSize","loadData","getRecommendList","_this2","$api","then","feed","entry","refreshed","catch","err","console","log","_this3","resultList","totalPage","Math","ceil","endIndex","i","push","concat","reset","history","components_search_Search","dist_default","isBlockContainer","downEnough","distanceBottom","components_recommend_Recommend","components_app_list_AppList","SearchList","artworkUrl100","trackName","primaryGenreName","connect","SearchResult","results","saveSearchList","manualFocusInst","removeSearchList","components_search_list_SearchList","dispatch","Profile","BasicRoute","react_router_dom","react_router","exact","path","component","Home","Boolean","window","location","hostname","match","Router","ReactDOM","render","es","react_hot_loader","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cefcc99e.chunk.js","sourcesContent":["\nimport * as types from './action-types'\n\nlet defaultState = {\n  searchList: []//搜索结果列表\n}\n\n// 修改state\nexport default(state = defaultState, action={})=>{\n  switch (action.type) {\n    case types.SAVE_SERACH_LIST:\n      return {\n        ...state,\n        searchList: action.searchList\n      }\n    case types.REMOVE_SERACH_LIST:\n      return{\n        ...state,\n        searchList:[]\n      }\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n// 创建store的时候，第二个参数是中间件，redux-thunk提供了一个thunk中间件，用于处理异步的action\nlet store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\n\nexport default store","// 搜索结果\nexport const SAVE_SERACH_LIST = 'SAVE_SERACH_LIST'\n// 清除历史结果\nexport const REMOVE_SERACH_LIST = 'REMOVE_SERACH_LIST'","\nimport { Toast } from 'antd-mobile'\n\n\n/**\n * 显示loading\n */\nfunction showLoading(){\n  Toast.loading('加载中...', 0);\n}\n\n/**\n * 隐藏loading\n */\nfunction hideLoading(){\n  Toast.hide();\n}\n\nexport function showFailToast(){\n  Toast.fail('服务器错误',2);\n}\n\n\n/**\n * 合并请求，同一时刻只显示一个loading\n */\nlet needLoadingRequestCount = 0\nexport function showFullScreenLoading() {\n  if (needLoadingRequestCount === 0) {\n    showLoading()\n  }\n  needLoadingRequestCount++\n}\n\nexport function hideFullScreenLoading() {\n  if (needLoadingRequestCount <= 0){\n    return\n  }\n  needLoadingRequestCount--\n  if (needLoadingRequestCount === 0) {\n    hideLoading()\n  }\n}\n\n\n\n/**\n * 防抖\n * @param {*} fn \n * @param {*} delay \n */\nexport function debounce(fn, delay) {\n  // 记录上一次的延时器\n  var timer = null;\n  delay = delay || 200;\n  return function () {\n    var args = arguments;\n    var that = this;\n    // 清除上一次延时器\n    clearTimeout(timer)\n    timer = setTimeout(function () {\n      fn.apply(that, args)\n    }, delay);\n  }\n}\n\n\n/**\n * 节流\n * @param {*} fn \n * @param {*} delay \n */\nexport function throttle(fn, delay) {\n  var lastTime;\n  var timer;\n  delay = delay || 200;\n  return function () {\n    var args = arguments;\n    var that = this;\n    // 记录当前函数触发的时间\n    var nowTime = Date.now();\n    if (lastTime && nowTime - lastTime < delay) {\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        // 记录上一次函数触发的时间\n        lastTime = nowTime;\n        // 修正this指向问题\n        fn.apply(that, args);\n      }, delay);\n    } else {\n      lastTime = nowTime;\n      fn.apply(that, args);\n    }\n  }\n} \n","import React, { Component } from 'react';\nimport { debounce} from '../../utils/commons'\n\n// css module 以为xx.module.css格式命名\n// 使用方式<input className={search.input} type=\"text\" placeholder=\"搜索应用\"/>\nimport \"./Search.scss\";\nclass Search extends Component {\n\n    constructor(props){\n        super(props);\n        this.showCancelBtn = false;\n        this.state = {};\n    }\n\n    componentDidMount(){\n        this.setState({\n            showCancelBtn: this.props.showCancelBtn\n        })\n    }\n\n    appSearch = debounce(() => {\n        // 非受控组件获取input值  设置input ref属性  通过 this.refs.keyword.value获取\n        let keyword = this.refs.keyword.value;\n        // 触发父组件事件\n        this.props.appSearch(keyword);\n    }, 500);\n\n    onFoucs(){\n        this.props.onFoucs();\n    }\n    onCancel(){\n        this.props.onCancel();\n    }\n\n    focus(){\n        this.refs.keyword.focus();\n    }\n\n    render() {\n        return (\n            <div className='search-container'>\n                <div className='search-bar'>\n                    <div className='iconfont icon-search'></div>\n                    <input className='search-input' type=\"text\" ref='keyword' onChange={this.appSearch.bind(this)} onFocus={this.onFoucs.bind(this)} placeholder=\"搜索应用\" />\n                    {\n                        this.state.showCancelBtn &&\n                        <div className='search-cancel' onClick={this.onCancel.bind(this)}>取消</div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport './Recommend.scss';\nclass Recommend extends Component {\n    render() {\n        return (\n            <div className='recommend-container'>\n                <div className='title'>推荐</div>\n                <ul className='app-list'>\n                    {\n                        this.props.list.map((item,index)=>{\n                            return(\n                                <li className='app-item' key={index}>\n                                    <img className='app-icon' src={item['im:image'][0].label} alt=\"\" />\n                                    <div className='app-name'>{item['im:name'].label}</div>\n                                    <div className='app-categray'>{item.category.attributes.label}</div>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Recommend;","import React, { Component } from 'react';\nimport LazyLoad from 'react-lazy-load';\n\nimport './AppList.scss';\nclass AppList extends Component {\n    render() {\n        return (\n            <div className='appList-container'>\n                <ul className='list'>\n                    {\n                        this.props.list.map((item, index) => {\n                            return (\n                                <li className='list-item' key={index}>\n                                    <div className='app-index'>{index+1}</div>\n                                    <div className='app-img'>\n                                        <LazyLoad offsetVertical={100}>\n                                            <img className='app-icon' src={item['im:image'][0].label} alt=\"\" />\n                                        </LazyLoad>\n                                    </div>\n                                    <div className='app-info'>\n                                        <div className='app-name'>{item['im:name'].label}</div>\n                                        <div className='app-categray'>{item.category.attributes.label}</div>\n                                    </div>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default AppList;","import axios from 'axios'\nimport { showFullScreenLoading, hideFullScreenLoading, showFailToast} from '../utils/commons'\n\nlet baseURL = '/';\nconst _axios = axios.create({\n  baseURL,\n  timeout: 15000,\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n});\n\n// Add a request interceptor\n_axios.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  showFullScreenLoading();\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n});\n\n// Add a response interceptor\n_axios.interceptors.response.use(function (response) {\n  // Do something with response data\n  setTimeout(() => {\n    hideFullScreenLoading();\n  }, 1000);\n  return response.data;\n}, function (error) {\n  // Do something with response error\n  hideFullScreenLoading();\n  showFailToast();\n  return Promise.reject(error);\n});\n\n\nexport default _axios","import axios from '../plugins/axios';\n\nlet api = {\n  // app列表\n  appListData(params){\n    return axios.get('/mock/appListData.json', params);\n  },\n  // 推荐\n  recommendData(params) {\n    return axios.get('/mock/recomendData.json', params);\n  },\n  // 搜索\n  lookUp(params) {\n    return axios.get('/mock/lookUp.json', params);\n  }\n}\n\nexport default api","import React, { Component } from 'react';\nimport ReactPullLoad, { STATS } from \"react-pullload\";\nimport \"react-pullload/dist/ReactPullLoad.css\";\nimport Search from '../components/search/Search';\nimport Recommend from '../components/recommend/Recommend';\nimport AppList from '../components/app_list/AppList';\nimport $api from '../api/index.js';\nimport './Home.scss';\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      appList: [],\n      appListAll: [],\n      recommendList:[],\n      hasMore: true,\n      action: STATS.init,\n      pageSize:10,\n      page:1\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentWillUnmount() {\n  }\n  \n  // 拉取数据\n  loadData(){\n    this.getAppList();\n    this.getRecommendList();\n  }\n\n  getAppList(){\n    $api.appListData({}).then((response) => {\n      let list = response.feed.entry;\n      this.setState({\n        appListAll: list,\n        hasMore: true,\n        action: STATS.refreshed\n      })\n      this.getPageData(1);\n    }).catch(err => {\n      console.log(err)\n      this.setState({\n        action: STATS.refreshed\n      })\n    })\n  }\n  getRecommendList(){\n    $api.recommendData({}).then((response) => {\n      let feed = response.feed;\n      this.setState({\n        recommendList: feed.entry\n      })\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n  // 分页加载\n  getPageData(page){\n    let resultList = [], list = [];\n    let appListAll = this.state.appListAll;\n    let pageSize = this.state.pageSize;\n    let totalPage = Math.ceil(appListAll.length / pageSize);//总页数\n    let startIndex = pageSize * (page - 1);\n    let endIndex = pageSize * page;\n    for (let i = startIndex; i < endIndex; i++) {\n      resultList.push(appListAll[i]);\n    }\n    if (page >= totalPage){\n      this.setState({ hasMore: false});\n    }\n    if (page===1){\n      list = resultList;\n    }else{\n      list = this.state.appList.concat(resultList);\n    }\n    this.setState({\n      appList: list,\n      page: page,\n      pageSize: pageSize,\n      action: STATS.reset\n    })\n  }\n\n  onFoucs(){\n    this.props.history.push(\"/search/result\");\n  }\n  \n  handleAction = action => {\n    //new action must do not equel to old action\n    if (action === this.state.action) {\n      return false;\n    }\n    if (action === STATS.refreshing) {\n      this.handRefreshing();\n    } else if (action === STATS.loading) {\n      this.handLoadMore();\n    } else {\n      //DO NOT modify below code\n      this.setState({\n        action: action\n      });\n    }\n  };\n\n  // 刷新\n  handRefreshing = ()=>{\n    this.setState({\n      action: STATS.refreshing\n    });\n    this.getAppList();\n  }\n\n  // 加载更多\n  handLoadMore = ()=>{\n    if (STATS.loading === this.state.action) {\n      return false;\n    }\n    //无更多内容则不执行后面逻辑\n    if (!this.state.hasMore) {\n      return;\n    }\n    // 显示正在加载\n    this.setState({\n      action: STATS.loading\n    });\n    let page = this.state.page+1;\n    setTimeout(() => {\n      this.getPageData(page);\n    }, 1500);\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='search-bar'>\n          <Search onFoucs={this.onFoucs.bind(this)}></Search>\n        </div>\n        <ReactPullLoad\n          className=\"block\"\n          isBlockContainer={true}\n          downEnough={100}\n          action={this.state.action}\n          handleAction={this.handleAction}\n          hasMore={this.state.hasMore}\n          distanceBottom={100}>\n          <Recommend list={this.state.recommendList}></Recommend>\n          <AppList list={this.state.appList}></AppList>\n        </ReactPullLoad>\n      </div>\n    );\n  }\n}\n\nexport default Index;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './SearchList.scss';\nclass SearchList extends Component {\n  render() {\n    return (\n      <div className='searchList-container'>\n        <ul className='list'>\n          {\n            this.props.searchList.map((item, index) => {\n              return (\n                <li className='list-item' key={index}>\n                  <img className='app-icon' src={item.artworkUrl100} alt=\"\" />\n                  <div className='app-info'>\n                    <div className='app-name'>{item.trackName}</div>\n                    <div className='app-summary'>{item.primaryGenreName}</div>\n                  </div>\n                </li>\n              )\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searchList: state.searchList\n})\n\nexport default connect(mapStateToProps)(SearchList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Search from '../../components/search/Search';\nimport SearchList from '../../components/search_list/SearchList';\nimport './SearchResult.scss';\nimport $api from '../../api/index.js';\nimport { saveSearchList, removeSearchList } from '../../store/action'\nclass SearchResult extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      searchList:[]\n    }\n  }\n  // 搜索app\n  appSearch(keyword) {\n    $api.lookUp({}).then((response) => {\n      this.setState({\n        searchList: response.results\n      })\n      // dispatch action\n      this.props.saveSearchList(this.state.searchList);\n    }).catch(err => {\n      console.log(err);\n    })\n  }\n\n  componentDidMount(){\n    this.manualFocusInst.focus();\n  }\n\n  onFoucs() {\n  }\n\n  onCancel(){\n    this.props.history.push(\"/\");\n    // 删除历史结果\n    this.props.removeSearchList();\n  }\n\n\n  render() {\n    return (\n      <div className='searchResult-container'>\n        <Search appSearch={this.appSearch.bind(this)} ref={(ref)=>this.manualFocusInst = ref} onCancel={this.onCancel.bind(this)} onFoucs={this.onFoucs.bind(this)} showCancelBtn={true}></Search>\n        <SearchList></SearchList>\n      </div>\n    );\n  }\n}\n\n// 将state 映射到展示组件的 props 中\nconst mapStateToProps = (state) => ({\n  searchList: state.searchList\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveSearchList: searchList => dispatch(saveSearchList(searchList)),\n  removeSearchList: () => dispatch(removeSearchList())\n})\n\n// 通过connect生成容器组件\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchResult);","\nimport * as types from './action-types'\n\nexport const saveSearchList = (searchList) => {\n  return {\n    type: types.SAVE_SERACH_LIST,\n    searchList\n  }\n}\n\nexport const removeSearchList = () => {\n  return {\n    type: types.REMOVE_SERACH_LIST\n  }\n}","import React, { Component } from 'react';\n\nimport './Profile.scss';\nclass Profile extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n    }\n  }\n  render() {\n    return (\n      <div className='profile'>\n        profile\n      </div>\n    );\n  }\n}\n\nexport default Profile;","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport SearchResult from '../pages/search_result/SearchResult';\nimport Profile from '../pages/profile/Profile';\n\n\nconst BasicRoute = () => (\n  <HashRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/search/result\" component={SearchResult} />\n      <Route exact path=\"/profile\" component={Profile} />\n    </Switch>\n  </HashRouter>\n);\n\nexport default BasicRoute;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { AppContainer } from 'react-hot-loader'\nimport store from './store'\nimport Router from './router/index';\nimport './styles/base.scss';\nimport * as serviceWorker from './serviceWorker';\n\nconst render = Component => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <AppContainer>\n        <Component />\n      </AppContainer>\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrender(Router)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}